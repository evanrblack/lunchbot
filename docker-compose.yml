version: '3'
services:
  reverse-proxy:
    image: traefik:v2.5
    command:
      #- '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.myresolver.acme.httpchallenge=true'
      - '--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.myresolver.acme.email=postmaster@sloth.run'
      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - proxy
    ports:
      - '80:80'
      - '443:443'
      #- '8080:8080'

  redis:
    image: redis:alpine
    labels:
      traefik.enable: 'false'

  web:
    build: .
    volumes:
      - .:/lunchbot
    tty: true
    env_file:
      - .env
    command: sh -c 'bundle exec rake db:migrate && bundle exec rerun rackup -- --host 0.0.0.0'
    ports:
      - '9292:9292'
    networks:
      - default
      - proxy
    depends_on:
      - redis
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.lunchbot.rule=Host(`lunchbot.sloth.run`)'
      - 'traefik.http.routers.lunchbot.service=lunchbot'
      - 'traefik.http.routers.lunchbot.tls.certresolver=myresolver'
      - 'traefik.http.services.lunchbot.loadbalancer.server.port=9292'

  worker:
    image: lunchbot_web
    volumes:
      - .:/lunchbot
    tty: true
    env_file:
      - .env
    command: sh -c 'bundle exec rerun sidekiq -- -r ./app/app.rb'
    networks:
      - default
    depends_on:
      - redis
    labels:
      traefik.enable: 'false'

networks:
  proxy:
    external: true
